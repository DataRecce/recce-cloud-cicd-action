name: Main Branch Build

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
      - "package.json"
      - "package-lock.json"
      - "tsconfig.json"

# Prevent concurrent builds on main
concurrency:
  group: main-build
  cancel-in-progress: false

jobs:
  build-and-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Check for changes in dist
        id: check-changes
        run: |
          if [ -n "$(git status --porcelain dist/)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "✅ Build artifacts have changes"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️  No changes in build artifacts"
          fi

      - name: Commit and push build artifacts
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "dev@reccehq.com"
          git config --local user.name "Recce GitHub Action Bot"
          git add dist/
          git commit -m "chore: update build artifacts [skip ci]"
          git push

      - name: Create build summary
        if: always()
        run: |
          echo "## Main Branch Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Committed**: ${{ steps.check-changes.outputs.changes }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Main branch build completed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Main branch build failed!" >> $GITHUB_STEP_SUMMARY
          fi

      # Optional: Create a GitHub release or tag
      - name: Create build artifact release
        if: steps.check-changes.outputs.changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: production-build-${{ github.sha }}
          path: dist/
          retention-days: 30
